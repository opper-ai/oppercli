name: Go Build and Release

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: arm64
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Build
        run: |
          env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o ./bin/opper-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/opper
          cd ./bin && sha256sum opper-${{ matrix.goos }}-${{ matrix.goarch }} > opper-${{ matrix.goos }}-${{ matrix.goarch }}.sha256
        shell: bash

      - name: Upload binary to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opper-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            ./bin/opper-${{ matrix.goos }}-${{ matrix.goarch }}
            ./bin/opper-${{ matrix.goos }}-${{ matrix.goarch }}.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download all artifacts from the matrix build
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
            
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload '${{ github.ref_name }}' ./artifacts/** --repo '${{ github.repository }}'

      - name: Update Homebrew Formula
        run: |
          chmod +x ./scripts/update_formula.sh
          ./scripts/update_formula.sh ${{ github.ref_name }}

      - name: Commit and Push Formula Changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add HomebrewFormula/opper.rb
          git commit -m "Update formula for version ${{ github.ref_name }}"
          git push
